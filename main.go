package main

import (
	"context"
	"log"

	"github.com/containerd/containerd"
	"github.com/containerd/containerd/namespaces"

	//
	//fcctrd "github.com/ckatsak/fc-ctrd"
	//_ "github.com/ckatsak/fc-ctrd"
	//_ "github.com/firecracker-microvm/firecracker-containerd"
	//_ "github.com/firecracker-microvm/firecracker-containerd"
	fcclient "github.com/firecracker-microvm/firecracker-containerd/firecracker-control/client"
)

const (
	defaultNamespace              = "default"
	defaultContainerdAddress      = "/run/firecracker-containerd/containerd.sock"
	defaultContainerdTTRPCAddress = defaultContainerdAddress + ".ttrpc"
)

func main() {
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	client, err := containerd.New(defaultContainerdAddress)
	if err != nil {
		log.Fatalf("error creating containerd client: %v", err)
	}

	ctx := namespaces.WithNamespace(context.Background(), defaultNamespace)
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	cst, err := client.ContentStore().ListStatuses(ctx)
	if err != nil {
		log.Fatalf("ContentStore().ListStatuses() failed: %v", err)
	}
	log.Printf("%#v", cst)
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	images, err := client.ImageService().List(ctx)
	if err != nil {
		log.Fatalf("client.ImageService().List() failed: %v", err)
	}
	log.Printf("images = %#v", images)
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	fcClient, err := fcclient.New(defaultContainerdTTRPCAddress)
	if err != nil {
		log.Fatalf("fcclient.New() failed: %v", err)
	}
	//_ = fcClient
	defer fcClient.Close()
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//fcClient.
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
