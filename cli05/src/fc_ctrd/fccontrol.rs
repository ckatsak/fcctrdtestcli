// This file is generated by rust-protobuf 3.2.0. Do not edit
// .proto file is parsed by pure
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `service/fccontrol/fccontrol.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_2_0;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n!service/fccontrol/fccontrol.proto\x12\x07fc_ctrd\x1a\x1bgoogle/protob\
    uf/empty.proto\x1a\x11firecracker.proto2\x8d\x08\n\x0bFirecracker\x12?\n\
    \x08CreateVM\x12\x18.fc_ctrd.CreateVMRequest\x1a\x19.fc_ctrd.CreateVMRes\
    ponse\x12:\n\x07PauseVM\x12\x17.fc_ctrd.PauseVMRequest\x1a\x16.google.pr\
    otobuf.Empty\x12<\n\x08ResumeVM\x12\x18.fc_ctrd.ResumeVMRequest\x1a\x16.\
    google.protobuf.Empty\x12L\n\x10CreateVMSnapshot\x12\x20.fc_ctrd.CreateV\
    MSnapshotRequest\x1a\x16.google.protobuf.Empty\x12H\n\x0eLoadVMSnapshot\
    \x12\x1e.fc_ctrd.LoadVMSnapshotRequest\x1a\x16.google.protobuf.Empty\x12\
    8\n\x06StopVM\x12\x16.fc_ctrd.StopVMRequest\x1a\x16.google.protobuf.Empt\
    y\x12B\n\tGetVMInfo\x12\x19.fc_ctrd.GetVMInfoRequest\x1a\x1a.fc_ctrd.Get\
    VMInfoResponse\x12F\n\rSetVMMetadata\x12\x1d.fc_ctrd.SetVMMetadataReques\
    t\x1a\x16.google.protobuf.Empty\x12L\n\x10UpdateVMMetadata\x12\x20.fc_ct\
    rd.UpdateVMMetadataRequest\x1a\x16.google.protobuf.Empty\x12N\n\rGetVMMe\
    tadata\x12\x1d.fc_ctrd.GetVMMetadataRequest\x1a\x1e.fc_ctrd.GetVMMetadat\
    aResponse\x12W\n\x10GetBalloonConfig\x12\x20.fc_ctrd.GetBalloonConfigReq\
    uest\x1a!.fc_ctrd.GetBalloonConfigResponse\x12F\n\rUpdateBalloon\x12\x1d\
    .fc_ctrd.UpdateBalloonRequest\x1a\x16.google.protobuf.Empty\x12T\n\x0fGe\
    tBalloonStats\x12\x1f.fc_ctrd.GetBalloonStatsRequest\x1a\x20.fc_ctrd.Get\
    BalloonStatsResponse\x12P\n\x12UpdateBalloonStats\x12\".fc_ctrd.UpdateBa\
    lloonStatsRequest\x1a\x16.google.protobuf.EmptyB\x0bZ\tfccontrolb\x06pro\
    to3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(2);
            deps.push(::protobuf::well_known_types::empty::file_descriptor().clone());
            deps.push(super::firecracker::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(0);
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
